name: MacOS
on:
  # push代码时触发workflow
  push:
    branches:
      - master
      - main
    tags:
      - "*"
    # 忽略README.md
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'Doxyfile.in'
      - '.clang-format'
      - '.git*'
      - '.github/workflows/ubuntu.yml'
      - '.github/workflows/windows.yml'
      - 'scripts/windows*'
  # pull_request时触发workflow
  pull_request:
    paths-ignore:
    - '*.md'
    - 'LICENSE'
    - 'Doxyfile.in'
    - '.clang-format'
    - '.git*'
    - '.github/workflows/ubuntu.yml'
    - '.github/workflows/windows.yml'
    - 'scripts/windows*'
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15,macos-11.0]
        qt_ver: [5.15.2,6.3.0]
        qt_arch: [clang_64]
    env:
      targetName: exedemo
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          submodules: true

      # macos 11.0 默认环境变了,要指定
      - name: prepare env
        if: ${{ matrix.os == 'macos-11.0' }}
        run: |
          softwareupdate --all --install --force
          sudo xcode-select --print-path
          sudo xcode-select --switch /Library/Developer/CommandLineTools   

      # 安装Qt
      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ matrix.qt_ver }}
          modules: ${{ matrix.modules }}

      - name: Configure (${{ matrix.configuration }})
        run: cmake -S . -Bbuild -DCMAKE_BUILD_TYPE=Release
      - name: Build 
        run: cmake --build build --config Release
      # 打包
      - name: package
        # 拷贝依赖
        run: |
          macdeployqt bin/Release/${targetName} -qmldir=. -verbose=1 -dmg
      # 上传artifacts          
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.targetName }}_${{ matrix.os }}_${{matrix.qt_ver}}.zip
          path: bin/Release/${{ env.targetName }}

      # tag 上传Release
      - name: uploadRelease
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bin/Release/${{ env.targetName }}.dmg
          asset_name: ${{ env.targetName }}_${{ matrix.os }}_${{ matrix.qt_ver }}.dmg
          tag: ${{ github.ref }}
          overwrite: true
