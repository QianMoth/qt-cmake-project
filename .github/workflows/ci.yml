name: CI

on:
  push:
    branches:
      - master
      - main
    tags:
      - "*"
  pull_request:

jobs:
  cmake-build:
    strategy:
      fail-fast: false
      matrix:
        configuration:
          - Release
        config:
          - sysname: linux-gcc-qt5.15.2
            toolchain: linux-gcc
            os: ubuntu-20.04
            compiler: gcc
            qt_version: "5.15.2"
            modules: ""

          - sysname: macos-clang-qt5.15.2
            toolchain: macos-clang
            os: macos-latest
            compiler: clang
            qt_version: "5.15.2"
            modules: ""

          - sysname: windows-msvc-qt5.15.2
            toolchain: windows-msvc
            os: windows-latest
            compiler: msvc
            qt_version: "5.15.2"
            modules: ""

          - sysname: linux-gcc-qt6.3.0
            toolchain: linux-gcc
            os: ubuntu-20.04
            compiler: gcc
            qt_version: "6.3.0"
            modules: "qt5compat"

          - sysname: macos-clang-qt6.3.0
            toolchain: macos-clang
            os: macos-latest
            compiler: clang
            qt_version: "6.3.0"
            modules: "qt5compat"

          - sysname: windows-msvc-qt6.3.0
            toolchain: windows-msvc
            os: windows-latest
            compiler: msvc
            qt_version: "6.3.0"
            modules: "qt5compat"

    name: ${{ matrix.config.sysname }}
    runs-on: ${{ matrix.config.os }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.config.qt_version }}
        modules: ${{ matrix.config.modules }}

    - name: Setup (Linux)
      if: startsWith (matrix.config.os, 'ubuntu')
      run: sudo apt-get install libxkbcommon-dev

    - name: Setup VS tools (Windows)
      if: startsWith (matrix.config.os, 'windows')
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64

    - name: Configure (${{ matrix.config.configuration }})
      run: cmake -S . -Bbuild -DCMAKE_BUILD_TYPE=${{ matrix.config.configuration }}

    - name: Build with ${{ matrix.config.compiler }}
      run: cmake --build build --config ${{ matrix.config.configuration }}

    # - name: Test
    #   working-directory: build
    #   env:
    #     CTEST_OUTPUT_ON_FAILURE: 1
    #   run: ctest -C ${{ matrix.configuration }}
