cmake_minimum_required(VERSION 3.5)

project(CXX_DEMO VERSION ${MO_VERSION} LANGUAGES CXX)
message(STATUS ==============${PROJECT_NAME}=START==============)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

#qt
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

find_package(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Widgets) # 识别是Qt6还是Qt5
find_package(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Widgets)
message(STATUS "QT_VERSION_MAJOR : " ${QT_VERSION_MAJOR})
message(STATUS "QT_DIR : " ${QT_DIR})

file(GLOB_RECURSE SRCS  *.cpp *.cxx *.cc)
file(GLOB_RECURSE INCS  *.hpp *.h)
file(GLOB_RECURSE RES  *.qrc *.rc)

set(PROJECT_SOURCES ${SRCS} ${INCS} ${RES})

add_executable(${PROJECT_NAME}
    WIN32
    ${PROJECT_SOURCES}
)

# 设置头文件路径
target_include_directories(${PROJECT_NAME}
    PRIVATE
        $<INSTALL_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
        $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
)


target_link_libraries(${PROJECT_NAME}
    PRIVATE
        Qt${QT_VERSION_MAJOR}::Widgets
)

# Qt设置
set_target_properties(${PROJECT_NAME} PROPERTIES
    MACOSX_BUNDLE_GUI_IDENTIFIER my.example.com
    MACOSX_BUNDLE_BUNDLE_VERSION ${PROJECT_VERSION}
    MACOSX_BUNDLE_SHORT_VERSION_STRING ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
    MACOSX_BUNDLE TRUE
    WIN32_EXECUTABLE TRUE
)

INSTALL(TARGETS ${PROJECT_NAME}
    RUNTIME DESTINATION CMAKE_RUNTIME_OUTPUT_DIRECTORY
    LIBRARY DESTINATION CMAKE_LIBRARY_OUTPUT_DIRECTORY
    ARCHIVE DESTINATION CMAKE_ARCHIVE_OUTPUT_DIRECTORY
    BUNDLE  DESTINATION CMAKE_RUNTIME_OUTPUT_DIRECTORY
)

# set(plugins_folder ${CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG}/plugins)
# execute_process(COMMAND ${CMAKE_COMMAND} -E make_directory ${plugins_folder})

message(STATUS ==============${PROJECT_NAME}=END==============)

